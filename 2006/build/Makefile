# Makefile generated by imake - do not edit!

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and </home/marcusmae/forge/cernlib/2006/src/Imakefile>
# $XConsortium: Imake.tmpl,v 1.224.1.1 95/06/19 17:51:01 gildea Exp $
#

.SUFFIXES: .i

# $XConsortium: Imake.cf,v 1.19 95/01/05 19:24:32 kaleb Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# platform-specific configuration parameters - edit linux-lp64.cf to change

# $XConsortium: lnxLib.rules,v 1.8 95/01/16 21:11:00 kaleb Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.197.1.1 95/06/19 18:01:48 gildea Exp $

 _NULLCMD_ = @ echo -n

          PATHSEP = /
	        / = /
            SHELL = /bin/sh

              TOP = /home/marcusmae/forge/cernlib/2006/build
      CURRENT_DIR =

	QUOTE="
\ENDQUOTE="

ifeq "$(strip $(IMAKE))" ""
            IMAKE = imake
endif
ifeq "$(strip $(MAKEDEPEND))" ""
           DEPEND = makedepend
else
	   DEPEND = $(MAKEDEPEND)
endif
        MKDIRHIER = mkdirhier
        CONFIGSRC = $(CVSCOSRC)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend
           IXXSRC = $(UNSUPPORTEDSRC)/programs/ixx
              IXX = ixx
         IXXFLAGS = -s BaseObject -m TypeObj -r RequestObj -p Xf
      IXXINCLUDES = -i '<X11/Fresco/enter-scope.h>'

          INCROOT = $(CVSCOSRC)/include
        USRLIBDIR = $(CVSCOSRC)/lib
         SHLIBDIR = $(CVSCOSRC)/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = $(CVSCOSRC)/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)5

                AR = ar cq

	    XARGS = xargs

  BOOTSTRAPCFLAGS =
               CC = gcc
               AS = as

        CCDEFINES =

               FC = g77
              FPP = /lib/cpp
      FDEBUGFLAGS = -O
FORTRANSAVEOPTION =
   FORTRANOPTIONS = -fno-automatic -fno-second-underscore -fugly-complex $(FORTRANSAVEOPTION)
           FCLINK = g77
  FORTRANINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(PACKAGE_INCLUDES) $(TOP_INCLUDES)
   FORTRANDEFINES =
FORTRANALLDEFMDEPEND = $(FORTRANINCLUDES) $(FORTRANDEFINES) $(CERNDEFINES) $(EXTRA_DEFINES) $(DEFINES)

  FORTRANALLDEFINES = $(FORTRANALLDEFMDEPEND)

          FCFLAGS = $(FDEBUGFLAGS) $(FORTRANOPTIONS)

.SUFFIXES: .cxx

              CXX = g++
    CXXDEBUGFLAGS = -O1 -fomit-frame-pointer
 CXXEXTRA_DEFINES =
CXXEXTRA_INCLUDES =
  CXXIDL_INCLUDES = -I$(TOP)/include
   CXXSTD_DEFINES =
       CXXOPTIONS =
      CXXINCLUDES = $(INCLUDES) $(TOP_INCLUDES) $(CXXEXTRA_INCLUDES) $(CXXIDL_INCLUDES)
       CXXDEFINES = $(CXXINCLUDES) $(CXXSTD_DEFINES) $(THREADS_CXXDEFINES) $(CXXEXTRA_DEFINES)
         CXXFLAGS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(THREADS_CXXFLAGS) $(CXXDEFINES)

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = flex -l
           LEXLIB = -lfl
             YACC = bison -y
           CCYACC = bison -y
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -sf
             MAKE = gmake
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
        MANSUFFIX = 1x
     LIBMANSUFFIX = 3x
    FILEMANSUFFIX = 5x
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
            TOUCH = touch

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags

           MFLAGS=$(filter-out --%,$(filter -%,$(MAKEFLAGS)))

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS =

         PICFLAGS = -B/usr/dll/jump/

      CXXPICFLAGS = -B/usr/dll/jump/

      PIFFLAGS = -B/usr/dll/jump/

    PROTO_DEFINES = -DFUNCPROTO=15 -DNARROWPROTO

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -s -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -s -m 4755

      PROJECTROOT = $(CVSCOSRC)

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O1 -fomit-frame-pointer
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(PACKAGE_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES) $(CCDEFINES) $(CERNDEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(USRLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
      FCLDOPTIONS =  $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = gcc

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = linux-lp64.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =
    IMAKE_INCLUDES=

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -DLocalTop=$(LOCALTOP)  			-I$(IRULESRC) $(IMAKE_INCLUDES) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl 			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) 			 $(EXTRA_ICONFIGFILES)

archive/%.o : %.c archive/%.d
	$(RM) $@
	$(CC) -c $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES) $< -o $@

archive/%.d : %.c
	-@if [ ! -d archive ] ; then mkdir archive; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p archive/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

debug/%.o : %.c debug/%.d
	$(RM) $@
	$(CC) -c -g $(CCOPTIONS) $(ALLDEFINES) $< -o $@

debug/%.d : %.c
	-@if [ ! -d debug ] ; then mkdir debug; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p debug/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

shared/%.o : %.c shared/%.d
	$(RM) $@
	$(CC) -c $(CDEBUGFLAGS) $(PICFLAGS) $(CCOPTIONS) $(ALLDEFINES) $< -o $@

shared/%.d : %.c
	-@if [ ! -d shared ] ; then mkdir shared; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p shared/ -- $(ALLDEFINES) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

.SUFFIXES: .F

.F.o:
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

archive/%.o : %.F archive/%.d
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

archive/%.d : %.F
	-@if [ ! -d archive ] ; then mkdir archive; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p archive/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

debug/%.o : %.F debug/%.d
	$(RM) $@
	$(FC) -c -g $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

debug/%.d : %.F
	-@if [ ! -d debug ] ; then mkdir debug; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p debug/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

shared/%.o : %.F shared/%.d
	$(RM) $@
	$(FC) -c $(FDEBUGFLAGS) $(PIFFLAGS) $(FORTRANOPTIONS) $(FORTRANALLDEFINES) -o $@ $<

shared/%.d : %.F
	-@if [ ! -d shared ] ; then mkdir shared; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p shared/ -- $(FORTRANALLDEFMDEPEND) $(_NOOP_) $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

ifeq ($(strip $(CERN)),)
CERN=/cern
endif

ifeq ($(strip $(CERN_LEVEL)),)
CERN_LEVEL=new
endif

ifeq ($(strip $(CERN_LIBDIR)),)
CERN_LIBDIR=$(CERN)$/$(CERN_LEVEL)$/lib
endif

ifeq ($(strip $(CERN_SHLIBDIR)),)
CERN_SHLIBDIR=$(CERN)$/$(CERN_LEVEL)$/shlib
endif

ifeq ($(strip $(CERN_BINDIR)),)
CERN_BINDIR=$(CERN)$/$(CERN_LEVEL)$/bin
endif

        CONFIGDIR = $(CVSCOSRC)$/config

	CERNDEFINES=-DCERNLIB_LINUX -DCERNLIB_UNIX -DCERNLIB_LNX -DCERNLIB_QMGLIBC -DCERNLIB_QMLXIA64
        PACKAGETOP=
        PACKAGE_NAME=
	LOCALTOP=

        PACKAGE_INCLUDES=-I$(TOP)$(PACKAGETOP) -I$(PROJECTROOT)$(LOCALTOP)$(PACKAGETOP) -I$(VPATH)

	VPATH=$(PROJECTROOT)$(LOCALTOP)$(CURRENT_DIR)

OBJS_C=$(SRCS_C:.c=.o)
OBJS_F=$(SRCS_F:.F=.o)
OBJS_CDF=$(SRCS_CDF:.cdf=.o)

OBJS=$(OBJS_C) $(OBJS_F) $(OBJS_CDF)

# -----------------------------------------------------------------------
# start of Imakefile : </home/marcusmae/forge/cernlib/2006/src/Imakefile>

LIBDIRS= packlib pawlib graflib mathlib geant321 mclibs phtools

SUBDIRS= $(LIBDIRS) patchy cfortran

SUBDIRS:= $(SUBDIRS) scripts

install.lib::  $(foreach dir,$(LIBDIRS),$(dir)/Makefile)

install.lib::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(LIBDIRS) ;\
	do \
		(cd $$i ; echo "installing" "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install.lib)||exit $$?; \
	done

INCLUDEDIRS= $(LIBDIRS) cfortran

install.include::  $(foreach dir,$(INCLUDEDIRS),$(dir)/Makefile)

install.include::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(INCLUDEDIRS) ;\
	do \
		(cd $$i ; echo "installing" "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR)  install.include)||exit $$?; \
	done

bin/kuipc::  $(foreach dir,packlib,$(dir)/Makefile)

bin/kuipc::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in packlib ;\
	do \
		(cd $$i ; echo Makeing bin/kuipc "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS)  bin/kuipc)||exit $$?; \
	done

lib/packlib::  $(foreach dir,packlib,$(dir)/Makefile)

lib/packlib::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in packlib ;\
	do \
		(cd $$i ; echo Makeing lib/packlib "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS)  lib/packlib)||exit $$?; \
	done

lib/kernlib::  $(foreach dir,packlib,$(dir)/Makefile)

lib/kernlib::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in packlib ;\
	do \
		(cd $$i ; echo Makeing lib/kernlib "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS)  lib/kernlib)||exit $$?; \
	done

emptyrule::

.SUFFIXES: .d

.c.d:
	$(SHELL) -ec "gcc -M $(ALLDEFINES) $< \
                      | sed 's/^[ ]*$*\.o/& $@/g' >$@"

.F.d:
	-@if [ ! -d . ] ; then mkdir .; fi
	@ $(TOUCH) $@.tmp
	 $(DEPEND) -f$@.tmp -p ./ -- $(FORTRANALLDEFMDEPEND)  $<
	@ sed 's=$*\.o=& $@=g' $@.tmp > $@
	@ $(RM) $@.tmp $@.tmp.bak

# -----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM_CMD) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

Makefile:: Imakefile
	-@if [ -f $@ ]; then set -x; \
	$(RM) $@.bak; $(MV) $@ $@.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR) \
	             -DPackageTop=$(PACKAGETOP)	\
		     -DPackageName=$(PACKAGE_NAME) \
		      -f $<

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -----------------------------------------------------------------------
# rules for building in SUBDIRS - do not edit

install::  $(foreach dir,$(SUBDIRS),$(dir)/Makefile)

install::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
		(cd $$i ; echo "installing" "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install)||exit $$?; \
	done

install.man::  $(foreach dir,$(SUBDIRS),$(dir)/Makefile)

install.man::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
		(cd $$i ; echo "installing man pages" "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS) DESTDIR=$(DESTDIR) install.man)||exit $$?; \
	done

clean::  $(foreach dir,$(SUBDIRS),$(dir)/Makefile)

clean::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
		(cd $$i ; echo "cleaning" "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS) RM_CMD='$(RM_CMD)' clean)||exit $$?; \
	done

tags::  $(foreach dir,$(SUBDIRS),$(dir)/Makefile)

tags::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
		(cd $$i ; echo "tagging" "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS) TAGS='$(TAGS)' tags)||exit $$?; \
	done

Makefiles::
	-@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	case '${MFLAGS}' in *n*) executeit="no";; esac; \
	for i in $(SUBDIRS) ;\
	do \
		case "$(CURRENT_DIR)" in \
		.) curdir= ;; \
		*) curdir=$(CURRENT_DIR)/ ;; \
		esac; \
		echo "making Makefiles in $$curdir$$i..."; \
		itmp="$$i" \
		curtmp="$(CURRENT_DIR)" \
		toptmp=""; \
		case "$$itmp" in \
		    ../?*) \
			while echo "$$itmp" | grep '^../' > /dev/null;\
			  do \
			     toptmp="/`basename $$curtmp`$$toptmp"; \
			     curtmp="`dirname $$curtmp`"; \
			     itmp="`echo $$itmp | sed 's;../;;'`"; \
			  done \
		    ;; \
		esac; \
		case "$$itmp" in \
		*/?*/?*/?*/?*)	newtop=../../../../..;; \
		*/?*/?*/?*)	newtop=../../../..;; \
		*/?*/?*)	newtop=../../..;; \
		*/?*)		newtop=../..;; \
		*)		newtop=..;; \
		esac; \
		newtop="$$newtop$$toptmp"; \
		case "$(TOP)" in \
		/?*) imaketop=$(TOP) \
		     imakeprefix= ;; \
		.) imaketop=$$newtop \
		   imakeprefix=$$newtop/ ;; \
		*) imaketop=$$newtop/$(TOP) \
		   imakeprefix=$$newtop/ ;; \
		esac; \
		cd $$i; \
		$(RM) Makefile.bak; \
		if [ -f Makefile ]; then \
			echo "	$(MV) Makefile Makefile.bak"; \
			if [ "$$executeit" != "no" ]; then \
				$(MV) Makefile Makefile.bak; \
			fi; \
		fi; \
		if [ "$$executeit" != "no" ]; then \
			$(IMAKE_CMD) -DTOPDIR=$$imaketop \
			-DCURDIR=$$curdir$$i \
			-DPackageTop=$(PACKAGETOP) \
			-DPackageName=$(PACKAGE_NAME); \
		fi; \
		$(MAKE) $(MFLAGS) Makefiles; \
		cd $$newtop; \
	done

includes::  $(foreach dir,$(SUBDIRS),$(dir)/Makefile)

includes::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
		(cd $$i ; echo including "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS)  includes)||exit $$?; \
	done
\

tree::  $(foreach dir,$(SUBDIRS),$(dir)/Makefile)

tree::
	@set -e; \
	case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	for i in $(SUBDIRS) ;\
	do \
		(cd $$i ; echo Checking Makefiles "in $(CURRENT_DIR)/$$i..."; \
			$(MAKE) $(MFLAGS) VERSION=nil tree)||exit $$?; \
	done

$(foreach dir,$(SUBDIRS),$(dir)/Makefile):
	-@case '${MFLAGS}' in *[ik]*) set +e;; esac; \
	case '${MFLAGS}' in -*n*) executeit="no";; esac; \
	i=`dirname $@`; \
	case "$(CURRENT_DIR)" in \
	.) curdir= ;; \
	*) curdir=$(CURRENT_DIR)/ ;; \
	esac; \
	echo "making Makefiles in $$curdir$$i..."; \
	itmp="$$i" \
	curtmp="$(CURRENT_DIR)" \
	toptmp=""; \
	case "$$itmp" in \
	    ../?*) \
		while echo "$$itmp" | grep '^../' > /dev/null;\
		  do \
		     toptmp="/`basename $$curtmp`$$toptmp"; \
		     curtmp="`dirname $$curtmp`"; \
		     itmp="`echo $$itmp | sed 's;../;;'`"; \
		  done \
	    ;; \
	esac; \
	case "$$itmp" in \
	*/?*/?*/?*/?*)	newtop=../../../../..;; \
	*/?*/?*/?*)	newtop=../../../..;; \
	*/?*/?*)	newtop=../../..;; \
	*/?*)		newtop=../..;; \
	*)		newtop=..;; \
	esac; \
	newtop="$$newtop$$toptmp"; \
	case "$(TOP)" in \
	/?*) imaketop=$(TOP) \
	     imakeprefix= ;; \
	.) imaketop=$$newtop \
	   imakeprefix=$$newtop/ ;; \
	*) imaketop=$$newtop/$(TOP) \
	   imakeprefix=$$newtop/ ;; \
	esac; \
	if [ ! -d $$i ]; then \
		mkdirhier $$i; \
	fi; \
	cd $$i; \
	$(RM) Makefile.bak; \
	if [ -f Makefile ]; then \
		true;		\
	else \
		for imakedir in $$newtop $(VPATH); do \
		   imakefile=`echo $$imakedir/$$i/Imakefile | \
		      sed -e 's://:/:'`; \
		   if [ -f $$imakefile ]; then break;fi; \
		done; \
		if [ ! -f $$imakefile ]; then \
		   echo "No Imakefile found --> exit"; \
		   exit 1; \
		fi; \
		if [ "$$executeit" != "no" ]; then \
			$(IMAKE_CMD) -DTOPDIR=$$imaketop \
			-DCURDIR=$$curdir$$i \
			-DPackageTop=$(PACKAGETOP) \
			-DPackageName=$(PACKAGE_NAME) \
			-f $$imakefile; \
		fi; \
	fi;

# -----------------------------------------------------------------------
# dependencies generated by makedepend

